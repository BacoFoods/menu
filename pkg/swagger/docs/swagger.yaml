basePath: /api/menu/v1
definitions:
  availability.EnableRequest:
    properties:
      enable:
        type: boolean
    type: object
  brand.Brand:
    properties:
      description:
        type: string
      id:
        type: integer
      menus:
        items:
          $ref: '#/definitions/menu.Menu'
        type: array
      name:
        type: string
      stores:
        items:
          $ref: '#/definitions/store.Store'
        type: array
    type: object
  category.Category:
    properties:
      brand_id:
        type: integer
      color:
        type: string
      description:
        type: string
      enable:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      sort_id:
        type: integer
    required:
    - brand_id
    type: object
  channel.Channel:
    properties:
      brand_id:
        type: integer
      enabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      shipping_cost:
        type: number
      short_name:
        type: string
    required:
    - brand_id
    type: object
  country.Country:
    properties:
      currency:
        $ref: '#/definitions/currency.Currency'
      currency_id:
        type: integer
      id:
        type: integer
      iso_code:
        type: string
      name:
        type: string
      phone_code:
        type: string
    type: object
  currency.Currency:
    properties:
      code:
        type: string
      id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  discount.Discount:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
      store_id:
        type: integer
      terms:
        type: string
      type:
        type: string
      value:
        type: number
    type: object
  invoice.Invoice:
    properties:
      id:
        type: integer
      order_id:
        type: integer
    type: object
  menu.Menu:
    properties:
      brand_id:
        type: integer
      categories:
        items:
          $ref: '#/definitions/category.Category'
        type: array
      description:
        type: string
      enable:
        type: boolean
      end_time:
        type: string
      id:
        type: integer
      name:
        type: string
      start_time:
        type: string
    type: object
  menu.RequestMenuAvailability:
    properties:
      places:
        items:
          properties:
            enable:
              type: boolean
            id:
              type: integer
          required:
          - enable
          - id
          type: object
        type: array
    required:
    - places
    type: object
  menu.RequestMenuCreate:
    properties:
      brand_id:
        type: integer
      name:
        type: string
      place:
        type: string
      place_id:
        items:
          type: integer
        type: array
    required:
    - brand_id
    - name
    - place
    - place_id
    type: object
  order.Order:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      comments:
        type: string
      cooking_time:
        type: integer
      current_status:
        type: string
      discounts:
        items:
          $ref: '#/definitions/order.OrderDiscount'
        type: array
      external_code:
        type: string
      id:
        type: integer
      invoice:
        $ref: '#/definitions/invoice.Invoice'
      invoice_id:
        type: integer
      items:
        items:
          $ref: '#/definitions/order.OrderItem'
        type: array
      order_type:
        type: string
      seats:
        type: integer
      store_id:
        type: integer
      surcharges:
        items:
          $ref: '#/definitions/order.OrderSurcharge'
        type: array
      table:
        $ref: '#/definitions/tables.Table'
      table_id:
        type: integer
    required:
    - brand_id
    - channel_id
    - store_id
    type: object
  order.OrderDetailTDP:
    properties:
      comments:
        type: string
      course:
        type: string
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  order.OrderDiscount:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      order_id:
        type: integer
      percentage:
        type: number
      store_id:
        type: integer
      terms:
        type: string
      type:
        type: string
      value:
        type: number
    type: object
  order.OrderItem:
    properties:
      comments:
        type: string
      course:
        type: string
      description:
        type: string
      discount:
        type: number
      discount_reason:
        type: string
      id:
        type: integer
      image:
        type: string
      modifiers:
        items:
          $ref: '#/definitions/order.OrderModifier'
        type: array
      name:
        type: string
      order_id:
        type: integer
      price:
        type: number
      product:
        $ref: '#/definitions/product.Product'
      product_id:
        type: integer
      quantity:
        type: integer
      sku:
        type: string
      surcharge:
        type: number
      surcharge_reason:
        type: string
      unit:
        type: string
    type: object
  order.OrderModifier:
    properties:
      category:
        type: string
      comments:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      order_item_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      sku:
        type: string
      unit:
        type: string
    type: object
  order.OrderSurcharge:
    properties:
      active:
        type: boolean
      amount:
        type: number
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      order_id:
        type: integer
      percentage:
        type: number
      store_id:
        type: integer
    type: object
  order.OrderTDP:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      comments:
        type: string
      items:
        items:
          $ref: '#/definitions/order.OrderDetailTDP'
        type: array
      order_type:
        type: string
      seats:
        type: integer
      store_id:
        type: integer
      table_id:
        type: integer
    required:
    - brand_id
    - channel_id
    - store_id
    type: object
  overriders.Overriders:
    properties:
      description:
        type: string
      discount_id:
        type: integer
      enable:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      place:
        type: string
      place_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
    type: object
  product.Modifier:
    properties:
      apply_price:
        type: number
      brand_id:
        type: integer
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    required:
    - brand_id
    type: object
  product.ModifierDTO:
    properties:
      apply_price:
        type: number
      category:
        type: string
      description:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
  product.Product:
    properties:
      brand_id:
        type: integer
      color:
        type: string
      description:
        type: string
      discount_id:
        type: integer
      id:
        type: integer
      image:
        type: string
      modifiers:
        items:
          $ref: '#/definitions/product.Modifier'
        type: array
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      tax_id:
        type: integer
      unit:
        type: string
    required:
    - brand_id
    type: object
  product.RequestUpdateOverriders:
    properties:
      field:
        example: price
        type: string
      value:
        example: "10000"
        type: string
    type: object
  shared.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  store.Store:
    properties:
      address:
        type: string
      brand_id:
        type: integer
      code:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      image:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    type: object
  surcharge.Surcharge:
    properties:
      active:
        type: boolean
      amount:
        type: number
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
      store_id:
        type: integer
    type: object
  tables.Table:
    properties:
      display_id:
        type: string
      display_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      number:
        type: integer
      order_id:
        type: integer
      xlocation:
        type: number
      ylocation:
        type: number
      zone_id:
        type: integer
    required:
    - display_id
    - display_name
    - number
    type: object
  taxes.Tax:
    properties:
      country:
        $ref: '#/definitions/country.Country'
      country_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
    type: object
  zones.RequestAddTable:
    properties:
      tables:
        items:
          type: integer
        type: array
    required:
    - tables
    type: object
  zones.RequestZoneCreate:
    properties:
      name:
        type: string
      store_id:
        type: integer
      table_amount:
        type: integer
      table_number:
        type: integer
    required:
    - name
    - store_id
    type: object
  zones.Zone:
    properties:
      id:
        type: integer
      name:
        type: string
      store_id:
        type: integer
      tables:
        items:
          $ref: '#/definitions/tables.Table'
        type: array
    type: object
info:
  contact:
    email: anderson.rodriguez@bacu.com
    name: Anderson Rodriguez
    url: https://www.bacu.co/quienes-somos
  description: Microservices for MENU.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.bacu.co/
  title: MENU-MS API Rest
  version: "1.0"
paths:
  /availability/{entity}/{entity-id}/{place}:
    get:
      consumes:
      - application/json
      description: Find availability for entity and place
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Find availability for entity and place
      tags:
      - Availability
  /availability/{entity}/{entity-id}/{place}/{place-id}:
    delete:
      description: Remove menu or category
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      - description: Place ID
        in: path
        name: place-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Remove menu or category
      tags:
      - Availability
    get:
      consumes:
      - application/json
      description: Get availability for entity and place
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      - description: Place ID
        in: path
        name: place-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Get availability for entity and place
      tags:
      - Availability
    put:
      description: Enable menu or category
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      - description: Place ID
        in: path
        name: place-id
        required: true
        type: string
      - description: Enable
        in: body
        name: enable
        required: true
        schema:
          $ref: '#/definitions/availability.EnableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Enable menu or category
      tags:
      - Availability
  /availability/entities:
    get:
      description: Find all entities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Find all entities
      tags:
      - Availability
  /availability/places:
    get:
      description: Find all places
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Find all places
      tags:
      - Availability
  /brand:
    get:
      consumes:
      - application/json
      description: To find brands
      parameters:
      - description: brand name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/brand.Brand'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find brands
      tags:
      - Brand
    post:
      consumes:
      - application/json
      description: To create a brand
      parameters:
      - description: brand
        in: body
        name: brand
        required: true
        schema:
          allOf:
          - type: object
          - properties:
              description:
                type: string
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a brand
      tags:
      - Brand
  /brand/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a brand
      tags:
      - Brand
    get:
      consumes:
      - application/json
      description: To get a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a brand
      tags:
      - Brand
    patch:
      consumes:
      - application/json
      description: To update a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      - description: brand
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/brand.Brand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a brand
      tags:
      - Brand
  /category:
    get:
      consumes:
      - application/json
      description: To find categories
      parameters:
      - description: category by name
        in: query
        name: name
        type: string
      - description: category by brand
        in: query
        name: brandID
        type: string
      - description: category by product
        in: query
        name: productID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/category.Category'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: To create a category
      parameters:
      - description: category request
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: To get a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a category
      tags:
      - Category
    patch:
      consumes:
      - application/json
      description: To update a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: category request
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a category
      tags:
      - Category
  /category/{id}/menu:
    get:
      consumes:
      - application/json
      description: To get menus from a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get menus from a category
      tags:
      - Category
  /category/{id}/product/{productID}/add:
    patch:
      consumes:
      - application/json
      description: To add a product to a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: product id
        in: path
        name: productID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To add a product to a category
      tags:
      - Category
  /category/{id}/product/{productID}/remove:
    patch:
      consumes:
      - application/json
      description: To remove a product from a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      - description: product id
        in: path
        name: productID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To remove a product from a category
      tags:
      - Category
  /channel:
    get:
      consumes:
      - application/json
      description: To find channels
      parameters:
      - description: channel name
        in: query
        name: name
        type: string
      - description: store id
        in: query
        name: store-id
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/channel.Channel'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find channels
      tags:
      - Channel
    post:
      consumes:
      - application/json
      description: To create a channel
      parameters:
      - description: channel
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/channel.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a channel
      tags:
      - Channel
  /channel/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a channel
      tags:
      - Channel
    get:
      consumes:
      - application/json
      description: To get a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a channel
      tags:
      - Channel
    patch:
      consumes:
      - application/json
      description: To update a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      - description: channel
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/channel.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a channel
      tags:
      - Channel
  /country:
    get:
      consumes:
      - application/json
      description: To find country
      parameters:
      - description: country code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/country.Country'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find country
      tags:
      - Country
    patch:
      consumes:
      - application/json
      description: To update country plan
      parameters:
      - description: country to update
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/country.Country'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update country
      tags:
      - Country
    post:
      consumes:
      - application/json
      description: To create a country
      parameters:
      - description: country request
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/country.Country'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a country
      tags:
      - Country
  /country/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a country
      parameters:
      - description: countryID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a country
      tags:
      - Country
    get:
      consumes:
      - application/json
      description: To find country by id
      parameters:
      - description: country id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find country by id
      tags:
      - Country
  /currency:
    get:
      consumes:
      - application/json
      description: To find currency
      parameters:
      - description: currency code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/currency.Currency'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find currency
      tags:
      - Currency
    patch:
      consumes:
      - application/json
      description: To update currency plan
      parameters:
      - description: currency to update
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/currency.Currency'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update currency
      tags:
      - Currency
    post:
      consumes:
      - application/json
      description: To create a currency
      parameters:
      - description: currency request
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/currency.Currency'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a currency
      tags:
      - Currency
  /currency/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a currency
      parameters:
      - description: currencyID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a currency
      tags:
      - Currency
    get:
      consumes:
      - application/json
      description: To find currency by id
      parameters:
      - description: currency id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find currency by id
      tags:
      - Currency
  /discount:
    get:
      consumes:
      - application/json
      description: To find discount
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/discount.Discount'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find discount
      tags:
      - Discount
    patch:
      consumes:
      - application/json
      description: To update discount plan
      parameters:
      - description: discount to update
        in: body
        name: discount
        required: true
        schema:
          $ref: '#/definitions/discount.Discount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update discount
      tags:
      - Discount
    post:
      consumes:
      - application/json
      description: To create a discount
      parameters:
      - description: discount request
        in: body
        name: discount
        required: true
        schema:
          $ref: '#/definitions/discount.Discount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a discount
      tags:
      - Discount
  /discount/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a discount
      parameters:
      - description: discountID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a discount
      tags:
      - Discount
    get:
      consumes:
      - application/json
      description: To find discount by id
      parameters:
      - description: discount id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find discount by id
      tags:
      - Discount
  /menu:
    get:
      consumes:
      - application/json
      description: To find menus
      parameters:
      - description: menu name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu.Menu'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find menus
      tags:
      - Menu
    post:
      consumes:
      - application/json
      description: To create a menu
      parameters:
      - description: menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/menu.RequestMenuCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a menu
      tags:
      - Menu
  /menu/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a menu
      tags:
      - Menu
    get:
      consumes:
      - application/json
      description: To get a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a menu
      tags:
      - Menu
    patch:
      consumes:
      - application/json
      description: To update a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/menu.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a menu
      tags:
      - Menu
  /menu/{id}/category/{categoryID}/add:
    patch:
      consumes:
      - application/json
      description: To add a category to a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: category id
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To add a category to a menu
      tags:
      - Menu
  /menu/{id}/category/{categoryID}/remove:
    patch:
      consumes:
      - application/json
      description: To remove a category from a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: category id
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To remove a category from a menu
      tags:
      - Menu
  /menu/{id}/place/{place}/availability:
    put:
      consumes:
      - application/json
      description: To update availability of a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: availability
        in: body
        name: availability
        required: true
        schema:
          $ref: '#/definitions/menu.RequestMenuAvailability'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update availability of a menu
      tags:
      - Menu
  /menu/{id}/store/{storeID}/channels:
    get:
      consumes:
      - application/json
      description: To find channels
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: store id
        in: path
        name: storeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find channels
      tags:
      - Menu
  /menu/place/{place}/{place-id}/list:
    get:
      consumes:
      - application/json
      description: To list menus by place
      parameters:
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: place id
        in: path
        name: place-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu.Menu'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To list menus by place
      tags:
      - Menu
  /menu/place/{place}/{place-id}/menu-id/{menu-id}:
    get:
      consumes:
      - application/json
      description: To get a menu by place and load overriders
      parameters:
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: place id
        in: path
        name: place-id
        required: true
        type: string
      - description: menu id
        in: path
        name: menu-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a menu by place and load overriders
      tags:
      - Menu
  /modifier:
    get:
      consumes:
      - application/json
      description: To find modifiers
      parameters:
      - description: modifier name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find modifiers
      tags:
      - Modifiers
    post:
      consumes:
      - application/json
      description: To create a modifier
      parameters:
      - description: modifier
        in: body
        name: modifier
        required: true
        schema:
          $ref: '#/definitions/product.Modifier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a modifier
      tags:
      - Modifiers
  /modifier/{id}:
    patch:
      consumes:
      - application/json
      description: To update a modifier
      parameters:
      - description: modifier id
        in: path
        name: id
        required: true
        type: string
      - description: modifier
        in: body
        name: modifier
        required: true
        schema:
          $ref: '#/definitions/product.ModifierDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a modifier
      tags:
      - Modifiers
  /modifier/{id}/product/{productID}:
    delete:
      consumes:
      - application/json
      description: To remove a product from a modifier
      parameters:
      - description: modifier id
        in: path
        name: id
        required: true
        type: string
      - description: product id
        in: path
        name: productID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To remove a product from a modifier
      tags:
      - Modifiers
    post:
      consumes:
      - application/json
      description: To add a product to a modifier
      parameters:
      - description: modifier id
        in: path
        name: id
        required: true
        type: string
      - description: product id
        in: path
        name: productID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To add a product to a modifier
      tags:
      - Modifiers
  /order:
    post:
      consumes:
      - application/json
      description: To create an order
      parameters:
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order.OrderTDP'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create an order
      tags:
      - Order
  /overriders:
    get:
      consumes:
      - application/json
      description: To find overriders
      parameters:
      - description: overriders name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/overriders.Overriders'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find overriders
      tags:
      - Overriders
    post:
      consumes:
      - application/json
      description: To create an overriders
      parameters:
      - description: overriders
        in: body
        name: overriders
        required: true
        schema:
          $ref: '#/definitions/overriders.Overriders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create an overriders
      tags:
      - Overriders
  /overriders/{id}:
    delete:
      consumes:
      - application/json
      description: To delete an overriders
      parameters:
      - description: overriders id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete an overriders
      tags:
      - Overriders
    get:
      consumes:
      - application/json
      description: To get an overriders
      parameters:
      - description: overriders id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get an overriders
      tags:
      - Overriders
    patch:
      consumes:
      - application/json
      description: To update an overriders
      parameters:
      - description: overriders id
        in: path
        name: id
        required: true
        type: string
      - description: overriders
        in: body
        name: overriders
        required: true
        schema:
          $ref: '#/definitions/overriders.Overriders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update an overriders
      tags:
      - Overriders
  /product:
    get:
      consumes:
      - application/json
      description: To find products
      parameters:
      - description: product name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/product.Product'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: To create a product
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a product
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: To get a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a product
      tags:
      - Product
    patch:
      consumes:
      - application/json
      description: To update a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a product
      tags:
      - Product
  /product/{id}/category:
    get:
      consumes:
      - application/json
      description: To get categories for a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get categories for a product
      tags:
      - Product
  /product/{id}/modifier/{modifierID}:
    delete:
      consumes:
      - application/json
      description: To remove a modifier from a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: modifier id
        in: path
        name: modifierID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To remove a modifier from a product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: To add a modifier to a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: modifier id
        in: path
        name: modifierID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To add a modifier to a product
      tags:
      - Product
  /product/{id}/overrider:
    get:
      consumes:
      - application/json
      description: To get overriders for a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: field
        in: query
        name: field
        required: true
        type: string
        x-example: price
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get overriders for a product
      tags:
      - Product
  /product/{id}/overrider/update-all:
    patch:
      consumes:
      - application/json
      description: To update all overriders for a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/product.RequestUpdateOverriders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update all overriders for a product
      tags:
      - Product
  /store:
    get:
      consumes:
      - application/json
      description: To find stores
      parameters:
      - description: store name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      - description: store code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/store.Store'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find stores
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: To create a store
      parameters:
      - description: store
        in: body
        name: store
        required: true
        schema:
          allOf:
          - type: object
          - properties:
              address:
                type: string
              brand_id:
                type: integer
              enabled:
                type: boolean
              image:
                type: string
              latitude:
                type: number
              longitude:
                type: number
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a store
      tags:
      - Store
  /store/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a store
      tags:
      - Store
    get:
      consumes:
      - application/json
      description: To get a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a store
      tags:
      - Store
    patch:
      consumes:
      - application/json
      description: To update a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: store
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/store.Store'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a store
      tags:
      - Store
  /store/{id}/channel/{channelID}:
    patch:
      consumes:
      - application/json
      description: To add a channel to a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: channel id
        in: path
        name: channelID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To add a channel to a store
      tags:
      - Store
  /store/{id}/zones:
    get:
      consumes:
      - application/json
      description: To get zones by store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    type: object
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get zones by store
      tags:
      - Store
  /store/{id}/zones/{zoneID}:
    get:
      consumes:
      - application/json
      description: To get tables by store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: zone id
        in: path
        name: zoneID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  type: object
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get tables by store
      tags:
      - Store
  /surcharges:
    get:
      consumes:
      - application/json
      description: Find surcharges
      parameters:
      - description: Brand ID
        in: query
        name: brandID
        type: string
      - description: Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/surcharge.Surcharge'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Find surcharges
      tags:
      - Surcharge
    post:
      consumes:
      - application/json
      description: Create surcharge
      parameters:
      - description: Surcharge
        in: body
        name: surcharge
        required: true
        schema:
          $ref: '#/definitions/surcharge.Surcharge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Create surcharge
      tags:
      - Surcharge
  /surcharges/{id}:
    delete:
      consumes:
      - application/json
      description: Delete surcharge
      parameters:
      - description: Surcharge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Delete surcharge
      tags:
      - Surcharge
    get:
      consumes:
      - application/json
      description: Get surcharge
      parameters:
      - description: Surcharge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Get surcharge
      tags:
      - Surcharge
    patch:
      consumes:
      - application/json
      description: Update surcharge
      parameters:
      - description: Surcharge ID
        in: path
        name: id
        required: true
        type: string
      - description: Surcharge
        in: body
        name: surcharge
        required: true
        schema:
          $ref: '#/definitions/surcharge.Surcharge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Update surcharge
      tags:
      - Surcharge
  /tables:
    get:
      consumes:
      - application/json
      description: Find tables
      parameters:
      - description: table name
        in: query
        name: name
        type: string
      - description: zone id
        in: query
        name: zoneID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/tables.Table'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Find tables
      tags:
      - Tables
    post:
      consumes:
      - application/json
      description: Create table
      parameters:
      - description: table
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/tables.Table'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/tables.Table'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Create table
      tags:
      - Tables
  /tables/{id}:
    delete:
      consumes:
      - application/json
      description: Delete table
      parameters:
      - description: table id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Delete table
      tags:
      - Tables
    get:
      consumes:
      - application/json
      description: Get tables
      parameters:
      - description: table id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/tables.Table'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Get tables
      tags:
      - Tables
    patch:
      consumes:
      - application/json
      description: Update table
      parameters:
      - description: table id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/tables.Table'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Update table
      tags:
      - Tables
  /tax:
    get:
      consumes:
      - application/json
      description: To find tax
      parameters:
      - description: country id
        in: query
        name: country_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/taxes.Tax'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find tax
      tags:
      - Tax
    patch:
      consumes:
      - application/json
      description: To update tax plan
      parameters:
      - description: tax to update
        in: body
        name: tax
        required: true
        schema:
          $ref: '#/definitions/taxes.Tax'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update tax
      tags:
      - Tax
    post:
      consumes:
      - application/json
      description: To create a tax
      parameters:
      - description: tax request
        in: body
        name: tax
        required: true
        schema:
          $ref: '#/definitions/taxes.Tax'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a tax
      tags:
      - Tax
  /tax/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a tax
      parameters:
      - description: taxID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a tax
      tags:
      - Tax
    get:
      consumes:
      - application/json
      description: To find tax by id
      parameters:
      - description: tax id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find tax by id
      tags:
      - Tax
  /zone:
    get:
      consumes:
      - application/json
      description: To find zones
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Store ID
        in: query
        name: storeID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/zones.Zone'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find zones
      tags:
      - Zones
    post:
      consumes:
      - application/json
      description: To create a zone
      parameters:
      - description: Zone
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestZoneCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/zones.Zone'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a zone
      tags:
      - Zones
  /zone/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a zone
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a zone
      tags:
      - Zones
    get:
      consumes:
      - application/json
      description: To get a zone
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/zones.Zone'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a zone
      tags:
      - Zones
    patch:
      consumes:
      - application/json
      description: To update a zone
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Zone
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestZoneCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/zones.Zone'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a zone
      tags:
      - Zones
  /zone/{id}/tables/add:
    patch:
      consumes:
      - application/json
      description: To add tables to a zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      - description: Add Table
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestAddTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To add tables to a zone
      tags:
      - Zones
  /zone/{id}/tables/remove:
    patch:
      consumes:
      - application/json
      description: To remove tables from a zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      - description: Remove Table
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestAddTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To remove tables from a zone
      tags:
      - Zones
swagger: "2.0"
