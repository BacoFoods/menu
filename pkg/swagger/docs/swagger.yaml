basePath: /api/menu/v1
definitions:
  availability.EnableRequest:
    properties:
      enable:
        type: boolean
    type: object
  brand.Brand:
    properties:
      description:
        type: string
      id:
        type: integer
      menus:
        items:
          $ref: '#/definitions/menu.Menu'
        type: array
      name:
        type: string
      stores:
        items:
          $ref: '#/definitions/store.Store'
        type: array
    type: object
  category.Category:
    properties:
      description:
        type: string
      enable:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/product.Product'
        type: array
    type: object
  channel.Channel:
    properties:
      enabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      shipping_cost:
        type: number
      short_name:
        type: string
      store_id:
        type: integer
    type: object
  country.Country:
    properties:
      currency:
        $ref: '#/definitions/currency.Currency'
      currency_id:
        type: integer
      id:
        type: integer
      iso_code:
        type: string
      name:
        type: string
      phone_code:
        type: string
    type: object
  currency.Currency:
    properties:
      code:
        type: string
      id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  discount.Discount:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
      terms:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  menu.Menu:
    properties:
      brand_id:
        type: integer
      categories:
        items:
          $ref: '#/definitions/category.Category'
        type: array
      description:
        type: string
      enable:
        type: boolean
      end_time:
        type: string
      id:
        type: integer
      name:
        type: string
      start_time:
        type: string
    type: object
  overriders.Overriders:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      discount:
        $ref: '#/definitions/discount.Discount'
      discount_id:
        type: integer
      enable:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      place:
        type: string
      place_id:
        type: integer
      price:
        type: number
      product:
        $ref: '#/definitions/product.Product'
      product_id:
        type: integer
      updated_at:
        type: string
    type: object
  product.Product:
    properties:
      description:
        type: string
      discount:
        $ref: '#/definitions/discount.Discount'
      discount_id:
        type: integer
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      tax:
        $ref: '#/definitions/taxes.Tax'
      tax_id:
        type: integer
      unit:
        type: string
    type: object
  shared.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  store.Store:
    properties:
      address:
        type: string
      brand_id:
        type: integer
      channels:
        items:
          $ref: '#/definitions/channel.Channel'
        type: array
      enabled:
        type: boolean
      id:
        type: integer
      image:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    type: object
  taxes.Tax:
    properties:
      country:
        $ref: '#/definitions/country.Country'
      country_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
    type: object
info:
  contact:
    email: anderson.rodriguez@bacu.com
    name: Anderson Rodriguez
    url: https://www.bacu.co/quienes-somos
  description: Microservices for MENU.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.bacu.co/
  title: MENU-MS API Rest
  version: "1.0"
paths:
  /availability/{entity}/{entity-id}/{place}/{place-id}:
    post:
      description: Enable menu
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      - description: Place ID
        in: path
        name: place-id
        required: true
        type: string
      - description: Enable
        in: body
        name: enable
        required: true
        schema:
          $ref: '#/definitions/availability.EnableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Enable menu
      tags:
      - Availability
  /brand:
    get:
      consumes:
      - application/json
      description: To find brands
      parameters:
      - description: brand name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/brand.Brand'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find brands
      tags:
      - Brand
    post:
      consumes:
      - application/json
      description: To create a brand
      parameters:
      - description: brand
        in: body
        name: brand
        required: true
        schema:
          allOf:
          - type: object
          - properties:
              description:
                type: string
              name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a brand
      tags:
      - Brand
  /brand/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a brand
      tags:
      - Brand
    get:
      consumes:
      - application/json
      description: To get a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a brand
      tags:
      - Brand
    patch:
      consumes:
      - application/json
      description: To update a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      - description: brand
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/brand.Brand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a brand
      tags:
      - Brand
  /category:
    get:
      consumes:
      - application/json
      description: To find categories
      parameters:
      - description: category name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/category.Category'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: To create a category
      parameters:
      - description: category request
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: To get a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a category
      tags:
      - Category
    patch:
      consumes:
      - application/json
      description: To update a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: category request
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a category
      tags:
      - Category
  /channel:
    get:
      consumes:
      - application/json
      description: To find channels
      parameters:
      - description: channel name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/channel.Channel'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find channels
      tags:
      - Channel
    post:
      consumes:
      - application/json
      description: To create a channel
      parameters:
      - description: channel
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/channel.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a channel
      tags:
      - Channel
  /channel/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a channel
      tags:
      - Channel
    get:
      consumes:
      - application/json
      description: To get a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a channel
      tags:
      - Channel
    patch:
      consumes:
      - application/json
      description: To update a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      - description: channel
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/channel.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a channel
      tags:
      - Channel
  /country:
    get:
      consumes:
      - application/json
      description: To find country
      parameters:
      - description: country code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/country.Country'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find country
      tags:
      - Country
    patch:
      consumes:
      - application/json
      description: To update country plan
      parameters:
      - description: country to update
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/country.Country'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update country
      tags:
      - Country
    post:
      consumes:
      - application/json
      description: To create a country
      parameters:
      - description: country request
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/country.Country'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a country
      tags:
      - Country
  /country/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a country
      parameters:
      - description: countryID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a country
      tags:
      - Country
    get:
      consumes:
      - application/json
      description: To find country by id
      parameters:
      - description: country id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find country by id
      tags:
      - Country
  /currency:
    get:
      consumes:
      - application/json
      description: To find currency
      parameters:
      - description: currency code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/currency.Currency'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find currency
      tags:
      - Currency
    patch:
      consumes:
      - application/json
      description: To update currency plan
      parameters:
      - description: currency to update
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/currency.Currency'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update currency
      tags:
      - Currency
    post:
      consumes:
      - application/json
      description: To create a currency
      parameters:
      - description: currency request
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/currency.Currency'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a currency
      tags:
      - Currency
  /currency/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a currency
      parameters:
      - description: currencyID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a currency
      tags:
      - Currency
    get:
      consumes:
      - application/json
      description: To find currency by id
      parameters:
      - description: currency id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find currency by id
      tags:
      - Currency
  /discount:
    get:
      consumes:
      - application/json
      description: To find discount
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/discount.Discount'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find discount
      tags:
      - Discount
    patch:
      consumes:
      - application/json
      description: To update discount plan
      parameters:
      - description: discount to update
        in: body
        name: discount
        required: true
        schema:
          $ref: '#/definitions/discount.Discount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update discount
      tags:
      - Discount
    post:
      consumes:
      - application/json
      description: To create a discount
      parameters:
      - description: discount request
        in: body
        name: discount
        required: true
        schema:
          $ref: '#/definitions/discount.Discount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a discount
      tags:
      - Discount
  /discount/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a discount
      parameters:
      - description: discountID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a discount
      tags:
      - Discount
    get:
      consumes:
      - application/json
      description: To find discount by id
      parameters:
      - description: discount id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find discount by id
      tags:
      - Discount
  /menu:
    get:
      consumes:
      - application/json
      description: To find menus
      parameters:
      - description: menu name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu.Menu'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find menus
      tags:
      - Menu
    post:
      consumes:
      - application/json
      description: To create a menu
      parameters:
      - description: menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/menu.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a menu
      tags:
      - Menu
  /menu/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a menu
      tags:
      - Menu
    get:
      consumes:
      - application/json
      description: To get a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a menu
      tags:
      - Menu
    patch:
      consumes:
      - application/json
      description: To update a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/menu.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a menu
      tags:
      - Menu
  /menu/place/{place}/{place-id}/list:
    get:
      consumes:
      - application/json
      description: To list menus by place
      parameters:
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: place id
        in: path
        name: place-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu.Menu'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To list menus by place
      tags:
      - Menu
  /menu/place/{place}/{place-id}/menu-id/{menu-id}:
    get:
      consumes:
      - application/json
      description: To get a menu by place and load overriders
      parameters:
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: place id
        in: path
        name: place-id
        required: true
        type: string
      - description: menu id
        in: path
        name: menu-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a menu by place and load overriders
      tags:
      - Menu
  /overriders:
    get:
      consumes:
      - application/json
      description: To find overriders
      parameters:
      - description: overriders name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/overriders.Overriders'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find overriders
      tags:
      - Overriders
    post:
      consumes:
      - application/json
      description: To create an overriders
      parameters:
      - description: overriders
        in: body
        name: overriders
        required: true
        schema:
          $ref: '#/definitions/overriders.Overriders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create an overriders
      tags:
      - Overriders
  /overriders/{id}:
    delete:
      consumes:
      - application/json
      description: To delete an overriders
      parameters:
      - description: overriders id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete an overriders
      tags:
      - Overriders
    get:
      consumes:
      - application/json
      description: To get an overriders
      parameters:
      - description: overriders id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get an overriders
      tags:
      - Overriders
    patch:
      consumes:
      - application/json
      description: To update an overriders
      parameters:
      - description: overriders id
        in: path
        name: id
        required: true
        type: string
      - description: overriders
        in: body
        name: overriders
        required: true
        schema:
          $ref: '#/definitions/overriders.Overriders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/overriders.Overriders'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update an overriders
      tags:
      - Overriders
  /product:
    get:
      consumes:
      - application/json
      description: To find products
      parameters:
      - description: product name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/product.Product'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: To create a product
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a product
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: To get a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a product
      tags:
      - Product
    patch:
      consumes:
      - application/json
      description: To update a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a product
      tags:
      - Product
  /store:
    get:
      consumes:
      - application/json
      description: To find stores
      parameters:
      - description: store name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/store.Store'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find stores
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: To create a store
      parameters:
      - description: store
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/store.Store'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a store
      tags:
      - Store
  /store/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a store
      tags:
      - Store
    get:
      consumes:
      - application/json
      description: To get a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To get a store
      tags:
      - Store
    patch:
      consumes:
      - application/json
      description: To update a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: store
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/store.Store'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update a store
      tags:
      - Store
  /tax:
    get:
      consumes:
      - application/json
      description: To find tax
      parameters:
      - description: country id
        in: query
        name: country_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/taxes.Tax'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find tax
      tags:
      - Tax
    patch:
      consumes:
      - application/json
      description: To update tax plan
      parameters:
      - description: tax to update
        in: body
        name: tax
        required: true
        schema:
          $ref: '#/definitions/taxes.Tax'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To update tax
      tags:
      - Tax
    post:
      consumes:
      - application/json
      description: To create a tax
      parameters:
      - description: tax request
        in: body
        name: tax
        required: true
        schema:
          $ref: '#/definitions/taxes.Tax'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create a tax
      tags:
      - Tax
  /tax/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a tax
      parameters:
      - description: taxID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To delete a tax
      tags:
      - Tax
    get:
      consumes:
      - application/json
      description: To find tax by id
      parameters:
      - description: tax id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To find tax by id
      tags:
      - Tax
swagger: "2.0"
