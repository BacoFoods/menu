basePath: /api/menu/v1
definitions:
  account.Account:
    properties:
      brand:
        $ref: '#/definitions/brand.Brand'
      brand_id:
        type: integer
      channel:
        $ref: '#/definitions/channel.Channel'
      channel_id:
        type: integer
      disabled:
        type: boolean
      display_name:
        type: string
      email:
        type: string
      id:
        type: integer
      role:
        type: string
      store:
        $ref: '#/definitions/store.Store'
      store_id:
        type: integer
      username:
        type: string
      uuid:
        type: string
    type: object
  account.RequestAccount:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      display_name:
        type: string
      email:
        type: string
      password:
        type: string
      role:
        type: string
      store_id:
        type: integer
      username:
        type: string
    required:
    - display_name
    - email
    - password
    - username
    type: object
  account.RequestAccountUpdate:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      display_name:
        type: string
      email:
        type: string
      id:
        type: integer
      role:
        type: string
      store_id:
        type: integer
      uuid:
        type: string
    required:
    - id
    type: object
  account.RequestLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  account.RequestLoginPin:
    properties:
      pin:
        type: integer
    type: object
  account.RequestPinUser:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      display_name:
        type: string
      email:
        type: string
      pin:
        type: integer
      role:
        type: string
      store_id:
        type: integer
    required:
    - brand_id
    - email
    - pin
    - store_id
    type: object
  availability.EnableRequest:
    properties:
      enable:
        type: boolean
    type: object
  brand.Brand:
    properties:
      city:
        type: string
      description:
        type: string
      document:
        type: string
      document_type:
        type: string
      id:
        type: integer
      menus:
        items:
          $ref: '#/definitions/menu.Menu'
        type: array
      name:
        type: string
      social_name:
        type: string
      stores:
        items:
          $ref: '#/definitions/store.Store'
        type: array
    type: object
  category.Category:
    properties:
      brand_id:
        type: integer
      color:
        type: string
      description:
        type: string
      enable:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      sort_id:
        type: integer
    required:
    - brand_id
    type: object
  channel.Channel:
    properties:
      brand_id:
        type: integer
      enabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      shipping_cost:
        type: number
      short_name:
        type: string
    required:
    - brand_id
    type: object
  client.Client:
    properties:
      address:
        type: string
      document:
        type: string
      document_type:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  country.Country:
    properties:
      currency:
        $ref: '#/definitions/currency.Currency'
      currency_id:
        type: integer
      id:
        type: integer
      iso_code:
        type: string
      name:
        type: string
      phone_code:
        type: string
    type: object
  course.Course:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      store_id:
        type: integer
    type: object
  currency.Currency:
    properties:
      code:
        type: string
      id:
        type: integer
      name:
        type: string
      symbol:
        type: string
    type: object
  discount.Discount:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
      store_id:
        type: integer
      terms:
        type: string
      type:
        type: string
      value:
        type: number
    type: object
  invoice.Discount:
    properties:
      amount:
        type: number
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      invoice_id:
        type: integer
      name:
        type: string
      percentage:
        type: number
      store_id:
        type: integer
      terms:
        type: string
      type:
        type: string
    type: object
  invoice.Invoice:
    properties:
      base_tax:
        type: number
      brand_id:
        type: integer
      cashier:
        type: string
      channel_id:
        type: integer
      client:
        $ref: '#/definitions/client.Client'
      client_id:
        type: integer
      discounts:
        items:
          $ref: '#/definitions/invoice.Discount'
        type: array
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/invoice.Item'
        type: array
      order_id:
        type: integer
      payments:
        items:
          $ref: '#/definitions/payment.Payment'
        type: array
      payments_observation:
        type: string
      store_id:
        type: integer
      sub_total:
        type: number
      surcharges:
        items:
          $ref: '#/definitions/invoice.Surcharge'
        type: array
      table_id:
        type: integer
      taxes:
        type: number
      tip:
        type: string
      tip_amount:
        type: number
      total:
        type: number
      total_discounts:
        type: number
      total_surcharges:
        type: number
      waiter:
        type: string
    required:
    - brand_id
    - channel_id
    - store_id
    type: object
  invoice.Item:
    properties:
      comments:
        type: string
      description:
        type: string
      hash:
        type: string
      id:
        type: integer
      invoice_id:
        type: integer
      name:
        type: string
      price:
        type: number
      product_id:
        type: integer
      sku:
        type: string
    type: object
  invoice.RequestInvoiceSeparate:
    properties:
      invoices:
        items:
          items:
            type: integer
          type: array
        type: array
    required:
    - invoices
    type: object
  invoice.RequestUpdateTip:
    properties:
      type:
        type: string
      value:
        type: number
    type: object
  invoice.Surcharge:
    properties:
      active:
        type: boolean
      amount:
        type: number
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      invoice_id:
        type: integer
      name:
        type: string
      percentage:
        type: number
      store_id:
        type: integer
    type: object
  menu.Menu:
    properties:
      brand_id:
        type: integer
      categories:
        items:
          $ref: '#/definitions/category.Category'
        type: array
      description:
        type: string
      enable:
        type: boolean
      end_time:
        type: string
      id:
        type: integer
      name:
        type: string
      start_time:
        type: string
    type: object
  menu.RequestMenuAvailability:
    properties:
      places:
        items:
          properties:
            enable:
              type: boolean
            id:
              type: integer
          required:
          - enable
          - id
          type: object
        type: array
    required:
    - places
    type: object
  menu.RequestMenuCreate:
    properties:
      brand_id:
        type: integer
      name:
        type: string
      place:
        type: string
      place_id:
        items:
          type: integer
        type: array
    required:
    - brand_id
    - name
    - place
    - place_id
    type: object
  order.Attendee:
    properties:
      account_id:
        type: integer
      name:
        type: string
      order_action:
        type: string
      order_step:
        type: string
      role:
        type: string
    type: object
  order.Order:
    properties:
      attendees:
        items:
          $ref: '#/definitions/order.Attendee'
        type: array
      brand_id:
        type: integer
      channel_id:
        type: integer
      client_name:
        type: string
      comments:
        type: string
      cooking_time:
        type: integer
      current_status:
        type: string
      external_code:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/order.OrderItem'
        type: array
      order_type:
        type: string
      seats:
        type: integer
      store_id:
        type: integer
      table_id:
        type: integer
      type:
        $ref: '#/definitions/order.OrderType'
      type_id:
        type: integer
    required:
    - brand_id
    - channel_id
    - store_id
    type: object
  order.OrderDTO:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      comments:
        type: string
      items:
        items:
          $ref: '#/definitions/order.OrderItemDTO'
        type: array
      order_type:
        type: string
      seats:
        type: integer
      store_id:
        type: integer
      table_id:
        type: integer
    required:
    - brand_id
    - channel_id
    - store_id
    type: object
  order.OrderItem:
    properties:
      comments:
        type: string
      course:
        type: string
      description:
        type: string
      discount:
        type: number
      discount_reason:
        type: string
      hash:
        type: string
      id:
        type: integer
      image:
        type: string
      modifiers:
        items:
          $ref: '#/definitions/order.OrderModifier'
        type: array
      name:
        type: string
      order_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      sku:
        type: string
      surcharge:
        type: number
      surcharge_reason:
        type: string
      unit:
        type: string
    type: object
  order.OrderItemDTO:
    properties:
      comments:
        type: string
      course:
        type: string
      modifiers:
        items:
          $ref: '#/definitions/order.OrderModifierDTO'
        type: array
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  order.OrderModifier:
    properties:
      category:
        type: string
      comments:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      order_id:
        type: integer
      order_item_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      sku:
        type: string
      unit:
        type: string
    type: object
  order.OrderModifierDTO:
    properties:
      comments:
        type: string
      product_id:
        type: integer
    required:
    - product_id
    type: object
  order.OrderType:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      store_id:
        type: integer
    type: object
  order.RequestAddProducts:
    properties:
      items:
        items:
          $ref: '#/definitions/order.OrderItemDTO'
        type: array
    required:
    - items
    type: object
  order.RequestModifiers:
    properties:
      modifiers:
        items:
          $ref: '#/definitions/order.OrderModifierDTO'
        type: array
    required:
    - modifiers
    type: object
  order.RequestUpdateOrderClientName:
    properties:
      client_name:
        type: string
    required:
    - client_name
    type: object
  order.RequestUpdateOrderComments:
    properties:
      comments:
        type: string
    required:
    - comments
    type: object
  order.RequestUpdateOrderItem:
    properties:
      comments:
        type: string
      course:
        type: string
      price:
        type: number
    type: object
  order.RequestUpdateOrderProduct:
    properties:
      comments:
        type: string
      course:
        type: string
      price:
        type: number
      quantity:
        type: integer
      unit:
        type: string
    type: object
  order.RequestUpdateOrderSeats:
    properties:
      seats:
        type: integer
    required:
    - seats
    type: object
  order.RequestUpdateOrderStatus:
    properties:
      status:
        example: ordering,cooking,delivered,invoicing,canceled,completed
        type: string
    required:
    - status
    type: object
  payment.Payment:
    properties:
      code:
        type: string
      id:
        type: integer
      invoice_id:
        type: integer
      method:
        type: string
      quantity:
        type: number
    required:
    - invoice_id
    - method
    - quantity
    type: object
  payment.PaymentMethod:
    properties:
      brand_id:
        type: integer
      channel_id:
        type: integer
      code:
        type: string
      franchise:
        type: string
      id:
        type: integer
      name:
        type: string
      short_name:
        type: string
      store_id:
        type: integer
    type: object
  product.Modifier:
    properties:
      apply_price:
        type: number
      brand_id:
        type: integer
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
    required:
    - brand_id
    type: object
  product.ModifierDTO:
    properties:
      apply_price:
        type: number
      category:
        type: string
      description:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
  product.Overrider:
    properties:
      description:
        type: string
      discount_id:
        type: integer
      enable:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      place:
        type: string
      place_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
    type: object
  product.Product:
    properties:
      brand_id:
        type: integer
      color:
        type: string
      description:
        type: string
      discount_id:
        type: integer
      enabled:
        type: boolean
      id:
        type: integer
      image:
        type: string
      modifiers:
        items:
          $ref: '#/definitions/product.Modifier'
        type: array
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      tax_id:
        type: integer
      unit:
        type: string
    required:
    - brand_id
    type: object
  product.RequestUpdateOverriders:
    properties:
      field:
        example: price
        type: string
      value:
        example: "10000"
        type: string
    type: object
  shared.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  status.CreateStatus:
    properties:
      active:
        type: boolean
      code:
        type: string
      color:
        type: string
      name:
        type: string
    required:
    - code
    - name
    type: object
  status.Status:
    properties:
      active:
        type: boolean
      code:
        type: string
      color:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  status.UpdateStatus:
    properties:
      code:
        type: string
      color:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - id
    type: object
  store.Store:
    properties:
      address:
        type: string
      brand_id:
        type: integer
      city:
        type: string
      code:
        type: string
      email:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      image:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      phone:
        type: string
    type: object
  surcharge.Surcharge:
    properties:
      active:
        type: boolean
      amount:
        type: number
      brand_id:
        type: integer
      channel_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
      store_id:
        type: integer
    type: object
  tables.Table:
    properties:
      display_id:
        type: string
      display_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      number:
        type: integer
      order_id:
        type: integer
      xlocation:
        type: number
      ylocation:
        type: number
      zone_id:
        type: integer
    required:
    - display_id
    - display_name
    - number
    type: object
  taxes.Tax:
    properties:
      country:
        $ref: '#/definitions/country.Country'
      country_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      percentage:
        type: number
    type: object
  zones.RequestAddTable:
    properties:
      tables:
        items:
          type: integer
        type: array
    required:
    - tables
    type: object
  zones.RequestZoneCreate:
    properties:
      active:
        type: boolean
      name:
        type: string
      store_id:
        type: integer
      table_amount:
        type: integer
      table_number:
        type: integer
    required:
    - name
    - store_id
    type: object
  zones.RequestZoneUpdate:
    properties:
      name:
        type: string
      store_id:
        type: integer
    type: object
  zones.Zone:
    properties:
      active:
        type: boolean
      id:
        type: integer
      name:
        type: string
      store_id:
        type: integer
      tables:
        items:
          $ref: '#/definitions/tables.Table'
        type: array
    type: object
info:
  contact:
    email: andersonrodriguezce@gmail.com
    name: Anderson Rodriguez
    url: https://www.bacu.co/quienes-somos
  description: Microservices for MENU.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.bacu.co/
  title: MENU-MS API Rest
  version: "1.0"
paths:
  /account:
    get:
      consumes:
      - application/json
      description: To find an account
      parameters:
      - description: account username
        in: query
        name: username
        type: string
      - description: account email
        in: query
        name: email
        type: string
      - description: account store id
        in: query
        name: storeID
        type: string
      - description: account role
        in: query
        name: role
        type: string
      - description: account brand id
        in: query
        name: brandID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/account.Account'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find an account
      tags:
      - Account
    patch:
      consumes:
      - application/json
      description: To update an account
      parameters:
      - description: account request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.RequestAccountUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/account.Account'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update an account but ⚠️⚠️⚠️⚠️⚠️⚠️⚠️ be careful ⚠️⚠️⚠️⚠️⚠️⚠️⚠️
      tags:
      - Account
    post:
      consumes:
      - application/json
      description: To create a pin user
      parameters:
      - description: account request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.RequestPinUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/account.Account'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a pin user
      tags:
      - Account
  /account/{id}:
    delete:
      consumes:
      - application/json
      description: To delete an account
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/account.Account'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete an account
      tags:
      - Account
  /availability/{entity}/{entity-id}/{place}:
    get:
      consumes:
      - application/json
      description: Find availability for entity and place
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Find availability for entity and place
      tags:
      - Availability
  /availability/{entity}/{entity-id}/{place}/{place-id}:
    delete:
      description: Remove menu or category
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      - description: Place ID
        in: path
        name: place-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Remove menu or category
      tags:
      - Availability
    get:
      consumes:
      - application/json
      description: Get availability for entity and place
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      - description: Place ID
        in: path
        name: place-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Get availability for entity and place
      tags:
      - Availability
    put:
      description: Enable menu or category
      parameters:
      - description: Entity
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entity-id
        required: true
        type: string
      - description: Place
        in: path
        name: place
        required: true
        type: string
      - description: Place ID
        in: path
        name: place-id
        required: true
        type: string
      - description: Enable
        in: body
        name: enable
        required: true
        schema:
          $ref: '#/definitions/availability.EnableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Enable menu or category
      tags:
      - Availability
  /availability/entities:
    get:
      description: Find all entities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Find all entities
      tags:
      - Availability
  /availability/places:
    get:
      description: Find all places
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Find all places
      tags:
      - Availability
  /brand:
    get:
      consumes:
      - application/json
      description: To find brands
      parameters:
      - description: brand name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/brand.Brand'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find brands
      tags:
      - Brand
    post:
      consumes:
      - application/json
      description: To create a brand
      parameters:
      - description: brand
        in: body
        name: brand
        required: true
        schema:
          allOf:
          - type: object
          - properties:
              description:
                type: string
              name:
                type: string
              nit:
                type: string
              social_name:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a brand
      tags:
      - Brand
  /brand/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a brand
      tags:
      - Brand
    get:
      consumes:
      - application/json
      description: To get a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a brand
      tags:
      - Brand
    patch:
      consumes:
      - application/json
      description: To update a brand
      parameters:
      - description: brand id
        in: path
        name: id
        required: true
        type: string
      - description: brand
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/brand.Brand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/brand.Brand'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a brand
      tags:
      - Brand
  /category:
    get:
      consumes:
      - application/json
      description: To find categories
      parameters:
      - description: category by name
        in: query
        name: name
        type: string
      - description: category by brand
        in: query
        name: brandID
        type: string
      - description: category by product
        in: query
        name: productID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/category.Category'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: To create a category
      parameters:
      - description: category request
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: To get a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a category
      tags:
      - Category
    patch:
      consumes:
      - application/json
      description: To update a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: category request
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/category.Category'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a category
      tags:
      - Category
  /category/{id}/menu:
    get:
      consumes:
      - application/json
      description: To get menus from a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get menus from a category
      tags:
      - Category
  /category/{id}/product/{productID}/add:
    patch:
      consumes:
      - application/json
      description: To add a product to a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: product id
        in: path
        name: productID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add a product to a category
      tags:
      - Category
  /category/{id}/product/{productID}/remove:
    patch:
      consumes:
      - application/json
      description: To remove a product from a category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: integer
      - description: product id
        in: path
        name: productID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove a product from a category
      tags:
      - Category
  /channel:
    get:
      consumes:
      - application/json
      description: To find channels
      parameters:
      - description: channel name
        in: query
        name: name
        type: string
      - description: store id
        in: query
        name: store-id
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/channel.Channel'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find channels
      tags:
      - Channel
    post:
      consumes:
      - application/json
      description: To create a channel
      parameters:
      - description: channel
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/channel.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a channel
      tags:
      - Channel
  /channel/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a channel
      tags:
      - Channel
    get:
      consumes:
      - application/json
      description: To get a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a channel
      tags:
      - Channel
    patch:
      consumes:
      - application/json
      description: To update a channel
      parameters:
      - description: channel id
        in: path
        name: id
        required: true
        type: string
      - description: channel
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/channel.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/channel.Channel'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a channel
      tags:
      - Channel
  /clients:
    get:
      consumes:
      - application/json
      description: To list all clients
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/client.Client'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To list all clients
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: To create a client
      parameters:
      - description: client
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/client.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/client.Client'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a client
      tags:
      - Client
  /clients/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a client
      parameters:
      - description: client id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/client.Client'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a client
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: To get a client
      parameters:
      - description: client id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/client.Client'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a client
      tags:
      - Client
    patch:
      consumes:
      - application/json
      description: To update a client
      parameters:
      - description: client
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/client.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/client.Client'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a client
      tags:
      - Client
  /country:
    get:
      consumes:
      - application/json
      description: To find country
      parameters:
      - description: country code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/country.Country'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find country
      tags:
      - Country
    patch:
      consumes:
      - application/json
      description: To update country plan
      parameters:
      - description: country to update
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/country.Country'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update country
      tags:
      - Country
    post:
      consumes:
      - application/json
      description: To create a country
      parameters:
      - description: country request
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/country.Country'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a country
      tags:
      - Country
  /country/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a country
      parameters:
      - description: countryID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a country
      tags:
      - Country
    get:
      consumes:
      - application/json
      description: To find country by id
      parameters:
      - description: country id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/country.Country'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find country by id
      tags:
      - Country
  /course:
    get:
      consumes:
      - application/json
      description: To find course
      parameters:
      - description: storeID
        in: query
        name: storeID
        type: string
      - description: channelID
        in: query
        name: channelID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/course.Course'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find course
      tags:
      - Course
    put:
      consumes:
      - application/json
      description: Creates a course or updates if ID course is provided in body
      parameters:
      - description: course
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/course.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/course.Course'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create or update a course
      tags:
      - Course
  /course/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a course
      parameters:
      - description: course id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/course.Course'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a course
      tags:
      - Course
    get:
      consumes:
      - application/json
      description: To find a course by id
      parameters:
      - description: course id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/course.Course'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find a course by id
      tags:
      - Course
  /currency:
    get:
      consumes:
      - application/json
      description: To find currency
      parameters:
      - description: currency code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/currency.Currency'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find currency
      tags:
      - Currency
    patch:
      consumes:
      - application/json
      description: To update currency plan
      parameters:
      - description: currency to update
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/currency.Currency'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update currency
      tags:
      - Currency
    post:
      consumes:
      - application/json
      description: To create a currency
      parameters:
      - description: currency request
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/currency.Currency'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a currency
      tags:
      - Currency
  /currency/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a currency
      parameters:
      - description: currencyID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a currency
      tags:
      - Currency
    get:
      consumes:
      - application/json
      description: To find currency by id
      parameters:
      - description: currency id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/currency.Currency'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find currency by id
      tags:
      - Currency
  /discount:
    get:
      consumes:
      - application/json
      description: To find discount
      parameters:
      - description: discount name
        in: query
        name: name
        type: string
      - description: store id
        in: query
        name: store-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/discount.Discount'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find discount
      tags:
      - Discount
    patch:
      consumes:
      - application/json
      description: To update discount plan
      parameters:
      - description: discount to update
        in: body
        name: discount
        required: true
        schema:
          $ref: '#/definitions/discount.Discount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update discount
      tags:
      - Discount
    post:
      consumes:
      - application/json
      description: To create a discount
      parameters:
      - description: discount request
        in: body
        name: discount
        required: true
        schema:
          $ref: '#/definitions/discount.Discount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a discount
      tags:
      - Discount
  /discount/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a discount
      parameters:
      - description: discountID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a discount
      tags:
      - Discount
    get:
      consumes:
      - application/json
      description: To find discount by id
      parameters:
      - description: discount id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/discount.Discount'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find discount by id
      tags:
      - Discount
  /invoice:
    get:
      consumes:
      - application/json
      description: To find invoices
      parameters:
      - description: order id
        in: query
        name: order_id
        type: string
      - description: paid
        enum:
        - "true"
        - "false"
        in: query
        name: paid
        type: string
      - description: store id
        in: query
        name: store_id
        type: string
      - description: is closed
        enum:
        - "true"
        - "false"
        in: query
        name: closed
        type: string
      - description: Days before
        in: query
        name: days
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  allOf:
                  - type: object
                  - properties:
                      invoices:
                        items:
                          $ref: '#/definitions/invoice.Invoice'
                        type: array
                    type: object
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find invoices
      tags:
      - Invoice
  /invoice/{id}:
    get:
      consumes:
      - application/json
      description: To get an invoice
      parameters:
      - description: invoice id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/invoice.Invoice'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get an invoice
      tags:
      - Invoice
    post:
      consumes:
      - application/json
      description: To update the tip of an invoice
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      - description: tip
        in: body
        name: tip
        required: true
        schema:
          $ref: '#/definitions/invoice.RequestUpdateTip'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/invoice.Invoice'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update the tip of an invoice
      tags:
      - Invoice
  /invoice/{id}/client/{clientID}/add:
    post:
      consumes:
      - application/json
      description: To add a client to an invoice
      parameters:
      - description: invoice id
        in: path
        name: id
        required: true
        type: string
      - description: client id
        in: path
        name: clientID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/invoice.Invoice'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add a client to an invoice
      tags:
      - Invoice
  /invoice/{id}/client/{clientID}/remove:
    post:
      consumes:
      - application/json
      description: To remove a client from an invoice
      parameters:
      - description: invoice id
        in: path
        name: id
        required: true
        type: string
      - description: client id
        in: path
        name: clientID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/invoice.Invoice'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove a client from an invoice
      tags:
      - Invoice
  /invoice/{id}/print:
    get:
      consumes:
      - application/json
      description: To print an invoice
      parameters:
      - description: invoice id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/invoice.Invoice'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To print an invoice
      tags:
      - Invoice
  /invoice/{id}/separate:
    post:
      consumes:
      - application/json
      description: To separate an invoice using items ids
      parameters:
      - description: invoice id
        in: path
        name: id
        required: true
        type: string
      - description: invoices for separation
        in: body
        name: invoices
        required: true
        schema:
          $ref: '#/definitions/invoice.RequestInvoiceSeparate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  allOf:
                  - type: object
                  - properties:
                      invoices:
                        items:
                          $ref: '#/definitions/invoice.Invoice'
                        type: array
                    type: object
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To separate an invoice using items ids
      tags:
      - Invoice
  /menu:
    get:
      consumes:
      - application/json
      description: To find menus
      parameters:
      - description: menu name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu.Menu'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find menus
      tags:
      - Menu
    post:
      consumes:
      - application/json
      description: To create a menu
      parameters:
      - description: menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/menu.RequestMenuCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a menu
      tags:
      - Menu
  /menu/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a menu
      tags:
      - Menu
    get:
      consumes:
      - application/json
      description: To get a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a menu
      tags:
      - Menu
    patch:
      consumes:
      - application/json
      description: To update a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/menu.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a menu
      tags:
      - Menu
  /menu/{id}/category/{categoryID}/add:
    patch:
      consumes:
      - application/json
      description: To add a category to a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: category id
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add a category to a menu
      tags:
      - Menu
  /menu/{id}/category/{categoryID}/remove:
    patch:
      consumes:
      - application/json
      description: To remove a category from a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: category id
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove a category from a menu
      tags:
      - Menu
  /menu/{id}/place/{place}/availability:
    put:
      consumes:
      - application/json
      description: To update availability of a menu
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: availability
        in: body
        name: availability
        required: true
        schema:
          $ref: '#/definitions/menu.RequestMenuAvailability'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update availability of a menu
      tags:
      - Menu
  /menu/{id}/store/{storeID}/channels:
    get:
      consumes:
      - application/json
      description: To find channels
      parameters:
      - description: menu id
        in: path
        name: id
        required: true
        type: string
      - description: store id
        in: path
        name: storeID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find channels
      tags:
      - Menu
  /menu/place/{place}/{place-id}/list:
    get:
      consumes:
      - application/json
      description: To list menus by place
      parameters:
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: place id
        in: path
        name: place-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu.Menu'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To list menus by place
      tags:
      - Menu
  /menu/place/{place}/{place-id}/menu-id/{menu-id}:
    get:
      consumes:
      - application/json
      description: To get a menu by place and load overriders
      parameters:
      - description: place
        in: path
        name: place
        required: true
        type: string
      - description: place id
        in: path
        name: place-id
        required: true
        type: string
      - description: menu id
        in: path
        name: menu-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/menu.Menu'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a menu by place and load overriders
      tags:
      - Menu
  /modifier:
    get:
      consumes:
      - application/json
      description: To find modifiers
      parameters:
      - description: modifier name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find modifiers
      tags:
      - Modifiers
    post:
      consumes:
      - application/json
      description: To create a modifier
      parameters:
      - description: modifier
        in: body
        name: modifier
        required: true
        schema:
          $ref: '#/definitions/product.Modifier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a modifier
      tags:
      - Modifiers
  /modifier/{id}:
    patch:
      consumes:
      - application/json
      description: To update a modifier
      parameters:
      - description: modifier id
        in: path
        name: id
        required: true
        type: string
      - description: modifier
        in: body
        name: modifier
        required: true
        schema:
          $ref: '#/definitions/product.ModifierDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a modifier
      tags:
      - Modifiers
  /modifier/{id}/product/{productID}:
    delete:
      consumes:
      - application/json
      description: To remove a product from a modifier
      parameters:
      - description: modifier id
        in: path
        name: id
        required: true
        type: string
      - description: product id
        in: path
        name: productID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove a product from a modifier
      tags:
      - Modifiers
    post:
      consumes:
      - application/json
      description: To add a product to a modifier
      parameters:
      - description: modifier id
        in: path
        name: id
        required: true
        type: string
      - description: product id
        in: path
        name: productID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Modifier'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add a product to a modifier
      tags:
      - Modifiers
  /order:
    get:
      consumes:
      - application/json
      description: To find orders
      parameters:
      - description: Store ID
        in: query
        name: store
        type: string
      - description: Table ID
        in: query
        name: table
        type: string
      - description: Status
        in: query
        name: status
        type: string
      - description: Is Active
        enum:
        - "true"
        - "false"
        in: query
        name: active
        type: string
      - description: Days before
        in: query
        name: days
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find orders
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: To create an order
      parameters:
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order.OrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create an order
      tags:
      - Order
  /order-item/{id}/add/modifiers:
    patch:
      consumes:
      - application/json
      description: To add modifiers to a product's order
      parameters:
      - description: OrderItemID
        in: path
        name: id
        required: true
        type: string
      - description: Add Modifiers
        in: body
        name: modifier
        required: true
        schema:
          $ref: '#/definitions/order.RequestModifiers'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add modifiers to a product's order
      tags:
      - Order
  /order-item/{id}/remove/modifiers:
    patch:
      consumes:
      - application/json
      description: To remove a modifiers from a product's order
      parameters:
      - description: OrderItemID
        in: path
        name: id
        required: true
        type: string
      - description: Remove Modifiers
        in: body
        name: modifier
        required: true
        schema:
          $ref: '#/definitions/order.RequestModifiers'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove a modifiers from a product's order
      tags:
      - Order
  /order-item/{id}/update:
    patch:
      consumes:
      - application/json
      description: To update an order item
      parameters:
      - description: OrderItemID
        in: path
        name: id
        required: true
        type: string
      - description: order item
        in: body
        name: orderItem
        required: true
        schema:
          $ref: '#/definitions/order.RequestUpdateOrderItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To update an order item
      tags:
      - Order
  /order-type:
    get:
      consumes:
      - application/json
      description: To find order types
      parameters:
      - description: Channel ID
        in: path
        name: channelID
        type: string
      - description: Store ID
        in: path
        name: storeID
        type: string
      - description: Brand ID
        in: path
        name: brandID
        type: string
      - description: Name
        in: path
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.OrderType'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To find order types
      tags:
      - OrderType
    post:
      consumes:
      - application/json
      description: To create an order type
      parameters:
      - description: Order Type
        in: body
        name: orderType
        required: true
        schema:
          $ref: '#/definitions/order.OrderType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.OrderType'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create an order type
      tags:
      - OrderType
  /order-type/{id}:
    delete:
      consumes:
      - application/json
      description: To delete an order type
      parameters:
      - description: Order Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.OrderType'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To delete an order type
      tags:
      - OrderType
    get:
      consumes:
      - application/json
      description: To get an order type
      parameters:
      - description: Order Type ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.OrderType'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To get an order type
      tags:
      - OrderType
    patch:
      consumes:
      - application/json
      description: To update an order type
      parameters:
      - description: Order Type ID
        in: path
        name: id
        required: true
        type: string
      - description: Order Type
        in: body
        name: orderType
        required: true
        schema:
          $ref: '#/definitions/order.OrderType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.OrderType'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To update an order type
      tags:
      - OrderType
  /order/{id}:
    get:
      consumes:
      - application/json
      description: To get an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get an order
      tags:
      - Order
  /order/{id}/add/products:
    patch:
      consumes:
      - application/json
      description: To add products to an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Add Products
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/order.RequestAddProducts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add products to an order
      tags:
      - Order
  /order/{id}/invoice:
    post:
      consumes:
      - application/json
      description: To create an invoice
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/invoice.Invoice'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To create an invoice
      tags:
      - Invoice
  /order/{id}/invoice/calculate:
    post:
      consumes:
      - application/json
      description: To calculate an invoice
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/invoice.Invoice'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To calculate an invoice
      tags:
      - Invoice
  /order/{id}/release-table:
    post:
      consumes:
      - application/json
      description: To release an order's table
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To release an order's table
      tags:
      - Order
  /order/{id}/remove/product:
    patch:
      consumes:
      - application/json
      description: To remove a product from an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Product ID
        in: path
        name: productID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove a product from an order
      tags:
      - Order
  /order/{id}/seats:
    patch:
      consumes:
      - application/json
      description: To update the seats of an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Seats
        in: body
        name: seats
        required: true
        schema:
          $ref: '#/definitions/order.RequestUpdateOrderSeats'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update the seats of an order
      tags:
      - Order
  /order/{id}/table/{table}:
    patch:
      consumes:
      - application/json
      description: To update the table of an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Table
        in: path
        name: table
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update the table of an order
      tags:
      - Order
  /order/{id}/update/client-name:
    patch:
      consumes:
      - application/json
      description: To update an order's client name
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Client Name
        in: body
        name: clientName
        required: true
        schema:
          $ref: '#/definitions/order.RequestUpdateOrderClientName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To update an order's client name
      tags:
      - Order
  /order/{id}/update/comments:
    patch:
      consumes:
      - application/json
      description: To update an order's comments
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Comments
        in: body
        name: comments
        required: true
        schema:
          $ref: '#/definitions/order.RequestUpdateOrderComments'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To update an order's comments
      tags:
      - Order
  /order/{id}/update/product:
    patch:
      consumes:
      - application/json
      description: To update a product from an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Product ID
        in: path
        name: productID
        required: true
        type: string
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/order.RequestUpdateOrderProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a product from an order
      tags:
      - Order
  /order/{id}/update/status:
    patch:
      consumes:
      - application/json
      description: To update the status of an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/order.RequestUpdateOrderStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/order.Order'
                status:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: To update the status of an order
      tags:
      - Order
  /overrider:
    get:
      consumes:
      - application/json
      description: To find overrider
      parameters:
      - description: overrider name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/product.Overrider'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find overrider
      tags:
      - Overrider
    post:
      consumes:
      - application/json
      description: To create an overrider
      parameters:
      - description: overrider
        in: body
        name: overriders
        required: true
        schema:
          $ref: '#/definitions/product.Overrider'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Overrider'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create an overrider
      tags:
      - Overrider
  /overrider/{id}:
    delete:
      consumes:
      - application/json
      description: To delete an overrider
      parameters:
      - description: overrider id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Overrider'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete an overrider
      tags:
      - Overrider
    get:
      consumes:
      - application/json
      description: To get an overrider
      parameters:
      - description: overrider id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Overrider'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get an overrider
      tags:
      - Overrider
    patch:
      consumes:
      - application/json
      description: To update an overrider
      parameters:
      - description: overrider id
        in: path
        name: id
        required: true
        type: string
      - description: overrider
        in: body
        name: overriders
        required: true
        schema:
          $ref: '#/definitions/product.Overrider'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Overrider'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update an overrider
      tags:
      - Overrider
  /payment:
    get:
      consumes:
      - application/json
      description: To find payment
      parameters:
      - description: payment code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/payment.Payment'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find payment
      tags:
      - Payment
    patch:
      consumes:
      - application/json
      description: To update payment
      parameters:
      - description: payment body
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/payment.Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.Payment'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update payment
      tags:
      - Payment
    post:
      consumes:
      - application/json
      description: To create payment
      parameters:
      - description: payment body
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/payment.Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.Payment'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create payment
      tags:
      - Payment
  /payment-method:
    get:
      consumes:
      - application/json
      description: To find payment method
      parameters:
      - description: brand id
        in: query
        name: brand_id
        type: string
      - description: store id
        in: query
        name: store_id
        type: string
      - description: channel id
        in: query
        name: channel_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/payment.PaymentMethod'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find payment method
      tags:
      - PaymentMethod
    patch:
      consumes:
      - application/json
      description: To update payment method
      parameters:
      - description: payment method body
        in: body
        name: payment_method
        required: true
        schema:
          $ref: '#/definitions/payment.PaymentMethod'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.PaymentMethod'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update payment method
      tags:
      - PaymentMethod
    post:
      consumes:
      - application/json
      description: To create payment method
      parameters:
      - description: payment method body
        in: body
        name: payment_method
        required: true
        schema:
          $ref: '#/definitions/payment.PaymentMethod'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.PaymentMethod'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create payment method
      tags:
      - PaymentMethod
  /payment-method/{id}:
    delete:
      consumes:
      - application/json
      description: To delete payment method
      parameters:
      - description: payment method id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.PaymentMethod'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete payment method
      tags:
      - PaymentMethod
    get:
      consumes:
      - application/json
      description: To get a payment method by id
      parameters:
      - description: payment method id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.PaymentMethod'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a payment method by id
      tags:
      - PaymentMethod
  /payment/{id}:
    delete:
      consumes:
      - application/json
      description: To delete payment
      parameters:
      - description: payment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.Payment'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete payment
      tags:
      - Payment
    get:
      consumes:
      - application/json
      description: To get a payment by id
      parameters:
      - description: payment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/payment.Payment'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a payment by id
      tags:
      - Payment
  /product:
    get:
      consumes:
      - application/json
      description: To find products
      parameters:
      - description: product name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/product.Product'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: This endpoint creates a product and makes an association with all
        store channels to this product to allow
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a product
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: To get a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a product
      tags:
      - Product
    patch:
      consumes:
      - application/json
      description: To update a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a product
      tags:
      - Product
  /product/{id}/category:
    get:
      consumes:
      - application/json
      description: To get categories for a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get categories for a product
      tags:
      - Product
  /product/{id}/modifier/{modifierID}:
    delete:
      consumes:
      - application/json
      description: To remove a modifier from a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: modifier id
        in: path
        name: modifierID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove a modifier from a product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: To add a modifier to a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: modifier id
        in: path
        name: modifierID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add a modifier to a product
      tags:
      - Product
  /product/{id}/overrider:
    get:
      consumes:
      - application/json
      description: To get overriders for a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: 'options: (price, name, description, image, enable)'
        in: query
        name: field
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get overriders for a product
      tags:
      - Product
  /product/{id}/overrider/update-all:
    patch:
      consumes:
      - application/json
      description: To update all overriders for a product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/product.RequestUpdateOverriders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/product.Product'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update all overriders for a product
      tags:
      - Product
  /public/account:
    post:
      consumes:
      - application/json
      description: To create an account
      parameters:
      - description: account request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.RequestAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/account.Account'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To create an account
      tags:
      - Account
  /public/account/login:
    post:
      consumes:
      - application/json
      description: To login
      parameters:
      - description: account request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To login
      tags:
      - Account
  /public/account/login/pin:
    post:
      consumes:
      - application/json
      description: To login
      parameters:
      - description: account request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.RequestLoginPin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
      summary: To login
      tags:
      - Account
  /status:
    get:
      consumes:
      - application/json
      description: To find status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/status.Status'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find status
      tags:
      - Status
    patch:
      consumes:
      - application/json
      description: To update status
      parameters:
      - description: status to update
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/status.UpdateStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/status.Status'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update status
      tags:
      - Status
    post:
      consumes:
      - application/json
      description: To create a status
      parameters:
      - description: status request
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/status.CreateStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/status.Status'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a status
      tags:
      - Status
  /status/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a status
      parameters:
      - description: statusID
        in: path
        name: id
        required: true
        type: string
      - description: status request
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/status.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  type: string
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a status
      tags:
      - Status
    get:
      consumes:
      - application/json
      description: To find status by id
      parameters:
      - description: status id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/status.Status'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find status by id
      tags:
      - Status
  /store:
    get:
      consumes:
      - application/json
      description: To find stores
      parameters:
      - description: store name
        in: query
        name: name
        type: string
      - description: brand id
        in: query
        name: brand-id
        type: string
      - description: store code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/store.Store'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find stores
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: To create a store
      parameters:
      - description: store
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/store.Store'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a store
      tags:
      - Store
  /store/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a store
      tags:
      - Store
    get:
      consumes:
      - application/json
      description: To get a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a store
      tags:
      - Store
    patch:
      consumes:
      - application/json
      description: To update a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: store
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/store.Store'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a store
      tags:
      - Store
  /store/{id}/channel/{channelID}:
    patch:
      consumes:
      - application/json
      description: To add a channel to a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: channel id
        in: path
        name: channelID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add a channel to a store
      tags:
      - Store
  /store/{id}/enable:
    patch:
      consumes:
      - application/json
      description: To enable/disable a store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/store.Store'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To enable/disable a store
      tags:
      - Store
  /store/{id}/zones:
    get:
      consumes:
      - application/json
      description: To get zones by store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    type: object
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get zones by store
      tags:
      - Store
  /store/{id}/zones/{zoneID}:
    get:
      consumes:
      - application/json
      description: To get tables by store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: zone id
        in: path
        name: zoneID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  type: object
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get tables by store
      tags:
      - Store
  /surcharge:
    get:
      consumes:
      - application/json
      description: Find surcharges
      parameters:
      - description: Brand ID
        in: query
        name: brandID
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Store ID
        in: query
        name: storeID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/surcharge.Surcharge'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Find surcharges
      tags:
      - Surcharge
    post:
      consumes:
      - application/json
      description: Create surcharge
      parameters:
      - description: Surcharge
        in: body
        name: surcharge
        required: true
        schema:
          $ref: '#/definitions/surcharge.Surcharge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Create surcharge
      tags:
      - Surcharge
  /surcharge/{id}:
    delete:
      consumes:
      - application/json
      description: Delete surcharge
      parameters:
      - description: Surcharge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete surcharge
      tags:
      - Surcharge
    get:
      consumes:
      - application/json
      description: Get surcharge
      parameters:
      - description: Surcharge ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Get surcharge
      tags:
      - Surcharge
    patch:
      consumes:
      - application/json
      description: Update surcharge
      parameters:
      - description: Surcharge ID
        in: path
        name: id
        required: true
        type: string
      - description: Surcharge
        in: body
        name: surcharge
        required: true
        schema:
          $ref: '#/definitions/surcharge.Surcharge'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/surcharge.Surcharge'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Update surcharge
      tags:
      - Surcharge
  /tables:
    get:
      consumes:
      - application/json
      description: Find tables
      parameters:
      - description: table name
        in: query
        name: name
        type: string
      - description: zone id
        in: query
        name: zoneID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/tables.Table'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Find tables
      tags:
      - Tables
    post:
      consumes:
      - application/json
      description: Create table
      parameters:
      - description: table
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/tables.Table'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/tables.Table'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Create table
      tags:
      - Tables
  /tables/{id}:
    delete:
      consumes:
      - application/json
      description: Delete table
      parameters:
      - description: table id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete table
      tags:
      - Tables
    get:
      consumes:
      - application/json
      description: Get tables
      parameters:
      - description: table id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/tables.Table'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Get tables
      tags:
      - Tables
    patch:
      consumes:
      - application/json
      description: Update table
      parameters:
      - description: table id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/tables.Table'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: Update table
      tags:
      - Tables
  /tax:
    get:
      consumes:
      - application/json
      description: To find tax
      parameters:
      - description: country id
        in: query
        name: country_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/taxes.Tax'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find tax
      tags:
      - Tax
    patch:
      consumes:
      - application/json
      description: To update tax plan
      parameters:
      - description: tax to update
        in: body
        name: tax
        required: true
        schema:
          $ref: '#/definitions/taxes.Tax'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update tax
      tags:
      - Tax
    post:
      consumes:
      - application/json
      description: To create a tax
      parameters:
      - description: tax request
        in: body
        name: tax
        required: true
        schema:
          $ref: '#/definitions/taxes.Tax'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a tax
      tags:
      - Tax
  /tax/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a tax
      parameters:
      - description: taxID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a tax
      tags:
      - Tax
    get:
      consumes:
      - application/json
      description: To find tax by id
      parameters:
      - description: tax id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/taxes.Tax'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find tax by id
      tags:
      - Tax
  /zone:
    get:
      consumes:
      - application/json
      description: To find zones
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Store ID
        in: query
        name: storeID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  items:
                    $ref: '#/definitions/zones.Zone'
                  type: array
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To find zones
      tags:
      - Zones
    post:
      consumes:
      - application/json
      description: To create a zone
      parameters:
      - description: Zone
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestZoneCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/zones.Zone'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To create a zone
      tags:
      - Zones
  /zone/{id}:
    delete:
      consumes:
      - application/json
      description: To delete a zone
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To delete a zone
      tags:
      - Zones
    get:
      consumes:
      - application/json
      description: To get a zone
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/zones.Zone'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To get a zone
      tags:
      - Zones
    patch:
      consumes:
      - application/json
      description: To update a zone
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Zone
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestZoneUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/zones.Zone'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To update a zone
      tags:
      - Zones
  /zone/{id}/enable:
    patch:
      consumes:
      - application/json
      description: To enable/disable a zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                data:
                  $ref: '#/definitions/zones.Zone'
                status:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To enable/disable a zone
      tags:
      - Zones
  /zone/{id}/tables/add:
    patch:
      consumes:
      - application/json
      description: To add tables to a zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      - description: Add Table
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestAddTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To add tables to a zone
      tags:
      - Zones
  /zone/{id}/tables/remove:
    patch:
      consumes:
      - application/json
      description: To remove tables from a zone
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      - description: Remove Table
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/zones.RequestAddTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/shared.Response'
      security:
      - ApiKeyAuth: []
      summary: To remove tables from a zone
      tags:
      - Zones
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
